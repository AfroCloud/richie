FORMAT: 1A

# Search: an ElasticSearch-based read API to access fun-cms resources

# Data Structures

## Subject
A single subject as saved in our ElasticSearch index. Includes a small subset of the fields and data in the the SQL database model, in order to be as small and consumer-friendly as possible.

+ id: 42 (number, required) - SQL database ID, reused in ElasticSearch
+ image: https://example.com/image.png (string) - a logo for the subject, only the most prominent ones have it
+ name: Computer Science (string, required)


# Group Subject
Subject-related resources for the fun-cms search API.

## GET /subject/{subject_id}
A single subject object. Access through this API is read-only (and thus GET only) as we're interacting with ElasticSearch and not the underlying model.

See the Subject data structure for more information.

+ Request
    + Headers

            Accept: application/json
            Accept-Language: fr-FR; fr; q=0.9, en-US; en; q=0.7, *; q=0.5

+ Response 200 (application/json)
    + Attributes (Subject)

## GET /subject?limit&offset
Collection of all subjects indexed in ElasticSearch. Can be filtered and selected through search query parameters.

+ Request
    + Parameters
        + limit: 10 (number, optional) - return {limit} subjects
        + offset: 0 (number, optional) - skip the first {offset} results; used for pagination
        + name: science (string, optional) - match on the name field
    + Headers

            Accept: application/json
            Accept-Language: fr-FR; fr; q=0.9, en-US; en; q=0.7, *; q=0.5

+ Response 200 (application/json)
    + Attributes
        + meta
            + count: 10 (number, required) - number of subjects effectively returned
            + offset: 0 (number, required) - number of subjects skipped
            + total_count: 89 (number, required) - total number of hits for the search parameters
        + objects: array[Subject]
